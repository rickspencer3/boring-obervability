"""adding polymorphism for anomaly detectors

Revision ID: 4212205333aa
Revises: 
Create Date: 2023-04-02 12:06:11.962290

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4212205333aa'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('error_detectors')
    op.drop_table('latency_detectors')
    with op.batch_alter_table('anomaly_detectors', schema=None) as batch_op:
        batch_op.add_column(sa.Column('latency_lower_bound', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('status_lower_bound', sa.Integer(), nullable=True))
        batch_op.alter_column('type',
               existing_type=sa.VARCHAR(length=10),
               nullable=False)
        batch_op.drop_column('key')
        batch_op.drop_column('value')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('anomaly_detectors', schema=None) as batch_op:
        batch_op.add_column(sa.Column('value', sa.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('key', sa.VARCHAR(length=100), nullable=True))
        batch_op.alter_column('type',
               existing_type=sa.VARCHAR(length=10),
               nullable=True)
        batch_op.drop_column('status_lower_bound')
        batch_op.drop_column('latency_lower_bound')

    op.create_table('latency_detectors',
    sa.Column('lower_latency_bound', sa.INTEGER(), nullable=False),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['anomaly_detectors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('error_detectors',
    sa.Column('lower_status_bound', sa.INTEGER(), nullable=False),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['anomaly_detectors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
